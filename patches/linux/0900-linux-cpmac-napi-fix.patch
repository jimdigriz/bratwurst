Author: Alexander Clouter <alex@digriz.org.uk>

From 3.19 onwards (probably d75b1ade567ffab085e8adbbdacf0092d10cd09c),
cpmac stalls on Rx, which was similar in sounding to
6a6dc08ff6395f58be3ee568cb970ea956f16819 (xen-netfront: use
napi_complete() correctly to prevent Rx stalling)

diff --git a/drivers/net/ethernet/ti/cpmac.c b/drivers/net/ethernet/ti/cpmac.c
index dd94300..9cbbb4d 100644
--- a/drivers/net/ethernet/ti/cpmac.c
+++ b/drivers/net/ethernet/ti/cpmac.c
@@ -507,16 +509,17 @@ static int cpmac_poll(struct napi_struct *napi, int budget)
 	if (unlikely(netif_msg_rx_status(priv)))
 		netdev_dbg(priv->dev, "poll processed %d packets\n", received);
 
-	if (processed == 0) {
-		/* we ran out of packets to read,
-		 * revert to interrupt-driven mode
-		 */
-		napi_complete(napi);
+	napi_complete(napi);
+
+	/* we ran out of packets to read,
+	 * revert to interrupt-driven mode
+	 */
+	if (processed == 0)
 		cpmac_write(priv->regs, CPMAC_RX_INT_ENABLE, 1);
-		return 0;
-	}
+	else if (received < budget)
+		napi_schedule(napi);
 
-	return 1;
+	return received;
 
 fatal_error:
 	/* Something went horribly wrong.
